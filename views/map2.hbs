<div class="card w-80 mb-2">
  <div class="card-body"  style="background-color:#ffffff ">
    <h2 class="card-title">Pedido para: <h3>{{cliente}} </h3></h2>
   
  </div>
</div>

<!---<button>Send an HTTP GET request to a page and get the result back</button>--->
{{#if coord}}
<input id="marcadores" type="hidden" value="{{coord}}" />
{{/if}}
{{#if fecha}}
<input id="inicio" type="hidden" value="{{fecha}}" />
{{/if}}
{{#if estimado}}
<input id="estimado" type="hidden" value="{{estimado}}" />
{{/if}}
{{#if waypoints}}
{{#each waypoints}}
<input id="waypoints[{{@index}}]" class="waypoints" type="hidden" value="{{this.location}}" />
{{/each}}
{{/if}}
{{#if  myLatLng}}
<input id="myLatLng" type="hidden" value="{{myLatLng}}" />
{{/if}}
{{#if  org}}
<input id="org" type="hidden" value="{{org}}" />
{{/if}}
{{#if pedido}}
<input id="pedido" type="hidden" value="{{pedido}}" />
{{/if}}
{{#if  repartidor}}
<input id="repartidor" type="hidden" value="{{repartidor}}" />
{{/if}}
{{#if  rutaImgRep}}
<input id="rutaImgRep" type="hidden" value="{{rutaImgRep}}" />
{{/if}}
{{#if  telRep}}
<input id="telRep" type="hidden" value="{{telRep}}" />
{{/if}}


<div class="container">
  <div class="row">
    <div class="col-md-3">
      <!---<h4>Tiempo Estimado</h4>--->
      <div class="card mb-12 card-img-top" style="max-width: 800px;">
        <div class="row g-0">
          <div class="text-center">
            <img src="{{rutaImgRep}}" class="rounded mx-auto d-block " alt="..." style="width:15vw;" />
          </div>
          <div class="col-md-12">
            <div class="card-body" id="alertProp">
              <h5 class="card-title">
                <!-- Display the countdown timer in an element -->
                <p class="card-text" id="demo1"></p></h5>
                <h5>Repartidor:</h5>
              <p class="card-text" >{{nomRep}}</p>
              <input type="hidden" value="{{nomRep}}" id="nomRep" />
              </br>
              <a href="https://wa.me/+5215569158396?text=Â¡Hola!. Requiero ayuda con mi pedido - "><i class="bi bi-telephone-fill"></i> Contactar</a>
              </br>
              <h6>Tiempo Estimado</h6>
              <p class="card-text"><small class="text-muted" id="demo"></small></p>
              <div style="display:none;" id="capProp">
                <!---<div class="input-group mb-3" >
                  <span class="input-group-text">$</span>
                  <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)" id="aprop">
                  <span class="input-group-text">.00</span>
                </div>--->
                <div class="row">
                  <div class="col">
                    <a href="#" class="coin" id="10" style="text-decoration: none;"><p class="text-center" ><strong>$10</strong><br><i class="bi bi-coin"></i></p></a>
                  </div>
                  <div class="col">
                    <a href="#" class="coin" id="20" style="text-decoration: none;"><p class="text-center" ><strong>$20</strong><br><i class="bi bi-coin"></i></p></a>
                  </div>
                  <div class="col">
                    <a href="#" class="coin" id="30" style="text-decoration: none;"><p class="text-center" ><strong>$30</strong><br><i class="bi bi-coin"></i></p></a>
                  </div>
                </div>
                <!---<div class="d-grid col-12 mx-auto">
                  <button type="button" class="btn btn-primary btn-sm" onclick="enviaPropina()" >Enviar Propina</button>
                </div>--->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-9">
      <div id="propina"></div>
      <div id="googleMap" style="position:relative;  width:350px;height:555px"></div>
      <!---<iframe src="http://95.111.215.185:4000/locations-test/{{repartidor}}/{{org}}/{{myLatLng}}" title="W3Schools Free Online Web Tutorials" style="width:50vw;height:30vh;"></iframe>--->
      <div class="card text-center" id="another" style="display:none;">
        <div class="card-header">
          Volver a Comprar 
        </div>
        <div class="card-body">
          <!---<h5 class="card-title">Special title treatment</h5>
          <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
          <a href="#" class="btn btn-primary">Go somewhere</a>--->
          <div class="row">
            <div class="col-md-6">
              <a href="https://www.vaperstudiomx.com"><img src="/imgs/logo_final.png" class="img-fluid rounded-start" style="width:10vw;" /></a>
            </div>
            <div class="col-md-6">
              <a href="https://wa.me/+5215569158396?text=Hola!"><img src="/imgs/whatsapp-logo.png" class="img-fluid rounded-start" style="width:10vw;" /></a>
            </div>
          </div>
        </div>
        <div class="card-footer text-muted">
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12">
    </div>
  </div>
</div>
<div class="card row row-cols-1 row-cols-md-3 g-2" style="width: 700rem;">
  <div class="card-body">
    <h3 class="card-title">Datos del pedido</h3>
   
    <h5>Cliente: </h5>
    <h6> {{cliente}} </h6>
    <h5>Direccion: </h5>
     <h6>{{myLatLng}}</h6> 
    

 
  </div>
</div>

<script src="//code.tidio.co/70kyvujk3p3izmqgwh0zjwfxgcw1il9v.js" async></script>




<script type="text/javascript">

  var motoMrk;
function myMap() {
            var myLatLng = { lat: 38.3460, lng: -0.4907 };
            
            var marcadores;
            //var myLatLng = { lat: parseInt($("#orglat").val()), lng: parseInt($("#orglong").val()) };
            var mapProp = {
                center: myLatLng,
                zoom:7,
                mapId: '71de3f3be3feff0c'

            };
            var map = new google.maps.Map(document.getElementById("googleMap"),mapProp);

            //create a DirectionsService object to use the route method and get a result for our request
                  var directionsService = new google.maps.DirectionsService();

                  //create a DirectionsRenderer object which we will use to display the route
                  var directionsDisplay = new google.maps.DirectionsRenderer();

                  //bind the DirectionsRenderer to the map
                  directionsDisplay.setMap(map);
                  
                  //create request
                  var waypoints = [];
                  //console.log($("").val());
                  /*$(".waypoints").each(function(index,data){
                    waypoints.push({
                      location : this.value,
                      stopover : true
                    });
                  });*/
                  //console.log(waypoints);
                  var request = {
                    origin: document.getElementById("org").value,//"Lago Hielmar 96"
                    destination: document.getElementById("myLatLng").value,
                    travelMode: google.maps.TravelMode.TWO_WHEELER, //WALKING, BYCYCLING, TRANSIT
                    unitSystem: google.maps.UnitSystem.IMPERIAL,
                    avoidHighways: true,
                    avoidTolls: true,
                    optimizeWaypoints : true,
                    provideRouteAlternatives: true,
                    waypoints: waypoints,
                    drivingOptions: {
                      departureTime: new Date(/* now, or future date */),
                      trafficModel: 'bestguess'
                   },
                  }

                  //pass the request to the route method
                  directionsService.route(request, function (result, status) {
                      if (status == google.maps.DirectionsStatus.OK) {
                          //display route
                          directionsDisplay.setDirections(result);
                      } else {
                          //delete route from map
                          directionsDisplay.setDirections({ routes: [] });
                          //center map in London
                          //map.setCenter(myLatLng);

                          //show error message
                          //output.innerHTML = "<div class='alert-danger'><i class='fas fa-exclamation-triangle'></i> Could not retrieve driving distance.</div>";
                      }
                  });

                  directionsDisplay.setOptions({suppressMarkers: false});

                  //console.log($("#marcadores").val());
                  //marcadores = $("#marcadores").val().split(",");
                  //console.log(marcadores.length+"LENGTH");
                  //for (i = 0; i < marcadores.length-1; i++) { 
                    //console.log(marcadores);
                  //if(i == 0/*marcadores.length-2*/){
                      //var coord = marcadores[i].split(",");
                      //console.log(coord);
                      var moto = {
                                url: "/imgs/delivery_icon.png", // url
                                scaledSize: new google.maps.Size(25, 25), // scaled size
                                //origin: new google.maps.Point(0,0), // origin
                                //anchor: new google.maps.Point(0, 0) // anchor
                            };
                      motoMrk = new google.maps.Marker({
                      position: new google.maps.LatLng(19.4434071, -99.1916135),
                      icon: moto,
                      map: map
                    });
                      
                  //}
                //}

                /*const icon = {
                              url: "/imgs/logo_final.png", // url
                              scaledSize: new google.maps.Size(50, 50), // scaled size
                              //origin: new google.maps.Point(0,0), // origin
                              //anchor: new google.maps.Point(0, 0) // anchor
                          };

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng($("#orglat").val(), $("#orglong").val()),
                    icon: icon,
                    map: map
                  });*/

                /*marker = new google.maps.Marker({
                    position: new google.maps.LatLng($("#destlat").val(), $("#destlong").val()),
                    icon: "/imgs/home_icon.png",
                    map: map
                  });*/

                  /*function getLastPoint() {
                    var marcadores = $("#marcadores").val().split("@");
                    var lastLat;
                    var lastLong;
                    for (i = 0; i < marcadores.length; i++) { 
                        var coord = marcadores[i].split(",");
                     }
                  }

                  function moveMoto( map, marker ) {
                      setTimeout(() => {
                          motoMrk.setPosition( new google.maps.LatLng( 12.3850, 77.4867 ) );
                          map.panTo( new google.maps.LatLng( 17.3850, 78.4867 ) );
                      }, 1000)
                  };

                  $(document).ready(function(){
                    $("button").click(function(){
                      $.get("http://vaperstudio.com:4000/getPoints",{ repartidor: $("#repartidor").val()  }, function(data, status){
                        console.log(data);
                        $("#marcadores").val();
                        $("#marcadores").val(data);
                        var marcadores = $("#marcadores").val().split("@");
                        for (i = 0; i < marcadores.length; i++) { 
                          var coord = marcadores[i].split(",");
                          var moto = {
                                    url: "/imgs/delivery_icon.png", // url
                                    scaledSize: new google.maps.Size(25, 25), // scaled size
                                    //origin: new google.maps.Point(0,0), // origin
                                    //anchor: new google.maps.Point(0, 0) // anchor
                                };
                          if(i == marcadores.length - 1){
                              motoMrk = new google.maps.Marker({
                              position: new google.maps.LatLng(coord[0], coord[1]),
                              icon: moto,
                              map: map
                            });
                          }
                        
                        //console.log(marcadores);
                        }
                      });
                    });
                  });*/

                  /*setTimeout(function(){
                          $.get("http://vaperstudio.com:4000/getPoints/"+$("#repartidor").val(),{ repartidor: $("#repartidor").val()  }, function(data, status){
                              console.log(data);
                              $("#marcadores").val();
                              $("#marcadores").val(data);
                              var marcadores = $("#marcadores").val().split("@");
                              for (i = 0; i < marcadores.length; i++) { 
                                var coord = marcadores[i].split(",");
                                var moto = {
                                          url: "/imgs/delivery_icon.png", // url
                                          scaledSize: new google.maps.Size(25, 25), // scaled size
                                          //origin: new google.maps.Point(0,0), // origin
                                          //anchor: new google.maps.Point(0, 0) // anchor
                                      };
                                if(i == marcadores.length - 1){
                                    motoMrk = new google.maps.Marker({
                                      position: new google.maps.LatLng(coord[0], coord[1]),
                                      icon: moto,
                                      map: map
                                    });
                                    motoMrk.setPosition( new google.maps.LatLng( coord[0], coord[1] ) );
                                    map.panTo( new google.maps.LatLng( coord[0], coord[1] ) );
                                }
                              
                              //console.log(marcadores);
                              }
                            });
                      }, 10000);*/

                      //setInterval(function() {
                        //element.innerHTML += "Hello"
                        //$.get("http://95.111.215.185:4000/getPoints/"+$("#repartidor").val(),{ repartidor: $("#repartidor").val()  }, function(data, status){
                              //console.log(data);
                              /*$("#marcadores").val();
                              $("#marcadores").val(data);*/
                              //mar = $("#marcadores").val().split("@");
                              //console.log(mar.length+"LENGTH");
                              //for (i = 0; i <= mar.length-1; i++) { 
                                //console.log(mar);
                              //if(i == 0/*marcadores.length-2*/){
                                //const ws=new WebSocket(`ws://${window.document.location.host}`);
                              const ws=new WebSocket('ws://vaperstudio.com:8080');
                              ws.binaryType = "blob";
                              // Log socket opening and closing  
                              ws.addEventListener("open", event => {
                              console.log("Websocket connection opened");
                              });
                              ws.addEventListener("close", event => {
                              console.log("Websocket connection closed");
                              });
                              ws.onmessage = function(message){
                              /*const msgDiv=document.createElement('div');
                              msgDiv.classList.add('msgCtn');*/
                                if (message.data instanceof Blob) {
                                  reader = new FileReader();
                                  reader.onload = () => {
                                    /*msgDiv.innerHTML = reader.result;
                                    document.getElementById('messages').appendChild(msgDiv);*/
                                    //console.log(reader.result+"aca");

                                      var coo = reader.result.toString().split("@");
                                      console.log(coo[1]);
                                      var co = coo[1].split(",");
                                      console.log(co);
                                      if($("#repartidor").val() == coo[0]){
                                        motoMrk.setPosition( new google.maps.LatLng( parseFloat(co[0]), parseFloat(co[1] ) ));
                                        map.panTo( new google.maps.LatLng( parseFloat(co[0]), parseFloat(co[1] )) );
                                      }
                                      
                                  };
                                  reader.readAsText(message.data);
                                } else {
                                /*console.log("Result2: " + message.data);
                                msgDiv.innerHTML = message.data;
                                document.getElementById('messages').appendChild(msgDiv);*/
                                var coo = message.data.split("@");
                                  var co = coo[1].split(",");
                                  if($("#repartidor").val() == coo[0]){
                                    motoMrk.setPosition( new google.maps.LatLng( parseFloat(co[0]), parseFloat(co[1] ) ));
                                    map.panTo( new google.maps.LatLng( parseFloat(co[0]), parseFloat(co[1] )) );
                                  }
                                };
                              };
                                /*const form=document.getElementById('msgForm');
                                form.addEventListener('submit',(event) => {
                                event.preventDefault();
                                const message=document.getElementById('inputBox').value;
                                ws.send(message);
                                document.getElementById('inputBox').value=''
                              });*/

                                  //var coord = data.split(",");
                                  //console.log(coord[0]+"<-->"+coord[1]);
                                  //motoMrk.setMap(null);
                                   /*var coo = coord[i].split(",");
                                  console.log(coo);
                                  motoMrk = {
                                            url: "/imgs/delivery_icon.png", // url
                                            scaledSize: new google.maps.Size(25, 25), // scaled size
                                            //origin: new google.maps.Point(0,0), // origin
                                            //anchor: new google.maps.Point(0, 0) // anchor
                                        };
                                  motoMrk = new google.maps.Marker({
                                  position: new google.maps.LatLng(data[0].latitude, data[0].longitude),
                                  icon: moto,
                                  map: map
                                });*/

                                  
                                  
                                //}
                              //}
                            //});
                        //console.log("refresh");
                        //clearInterval();
                      //}, 500);


                
}


// Set the date we're counting down to

//console.log(new Date($("#inicio").val()));
//console.log(estimado*60000);
function countDown(){
    // Update the count down every 1 second
    var countDownDate = new Date(document.getElementById("inicio").value).getTime();
    var estimado = document.getElementById("estimado").value;
    // Get today's date and time
    var now = new Date().getTime();
    //console.log(new Date());
    //console.log($("#inicio").val());
    // Find the distance between now and the count down date
    //var distance = (countDownDate+(estimado*60000)) - (now);
    var distance = (countDownDate+(estimado*60000)) - (now);

    // Time calculations for days, hours, minutes and seconds
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

    seconds = new Date(document.getElementById("inicio").value);


    // Display the result in the element with id="demo"
    document.getElementById("demo").innerHTML = days + "d " + hours + "h "
    + minutes + "m " + seconds + "s ";

    // If the count down is finished, write some text
    if (distance < 0) {
      clearInterval(x);
      document.getElementById("demo").innerHTML = "EXPIRED";
      document.getElementById("capProp").style.display = "block";
      
    }


  }
var x = setInterval(function() { 

// Update the count down every 1 second
    var countDownDate = new Date(document.getElementById("inicio").value.replace(" ", "T")).getTime();
    //countDownDate.replace(" ", "T")
    var estimado = document.getElementById("estimado").value;
    // Get today's date and time
    var now = new Date().getTime();
    //console.log(new Date());
    //console.log($("#inicio").val());
    // Find the distance between now and the count down date
    //var distance = (countDownDate+(estimado*60000)) - (now);
    var distance = (countDownDate+(estimado*60000)) - (now);

    // Time calculations for days, hours, minutes and seconds
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

    //seconds = new Date(document.getElementById("inicio").value);


    // Display the result in the element with id="demo"
    document.getElementById("demo").innerHTML = days + "d " + hours + "h "
    + minutes + "m " + seconds + "s ";

    // If the count down is finished, write some text
    if (distance < 0) {
      clearInterval(x);
      document.getElementById("demo").innerHTML = "EXPIRED";
      document.getElementById("capProp").style.display = "block";
      
    }


 }, 1000);
// Set the date we're counting down to
/*var countDownDate = new Date("Jan 5, 2024 15:37:25").getTime();

// Update the count down every 1 second
var x = setInterval(function() {

  // Get today's date and time
  var now = new Date().getTime();

  // Find the distance between now and the count down date
  var distance = countDownDate - now;

  // Time calculations for days, hours, minutes and seconds
  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
  var seconds = Math.floor((distance % (1000 * 60)) / 1000);

  // Display the result in the element with id="demo"
  document.getElementById("demo").innerHTML = days + "d " + hours + "h "
  + minutes + "m " + seconds + "s ";

  // If the count down is finished, write some text
  if (distance < 0) {
    clearInterval(x);
    document.getElementById("demo").innerHTML = "EXPIRED";
  }
}, 1000);*/
//"+$("#repartidor").val()+"/"+$("#aprop").val()+"/"+$("#pedido").val()
function enviaPropina(monto){
  $.get("http://vaperstudio.com:4000/setPropina/"+$("#repartidor").val()+"/"+monto+"/"+$("#pedido").val(),{ repartidor: $("#repartidor").val(), propina : monto, pedido : $("#pedido").val()  }, function(data, status){
    //console.log(data);
    /*$("#marcadores").val();
    $("#marcadores").val(data);*/
    //mar = $("#marcadores").val().split("@");
    //console.log(mar.length+"LENGTH");
    //for (i = 0; i <= mar.length-1; i++) { 
      //console.log(mar);
    //if(i == 0/*marcadores.length-2*/){
      console.log(data);
      $("#propina").append(data);
      document.getElementById("googleMap").style.display = "none";
      document.getElementById("capProp").style.display = "none";
      document.getElementById("another").style.display = "block";
      //var coo = data.split(",");
        //var coord = data.split(",");
        //console.log(coord[0]+"<-->"+coord[1]);
        //motoMrk.setMap(null);
         /*var coo = coord[i].split(",");
        console.log(coo);
        motoMrk = {
                  url: "/imgs/delivery_icon.png", // url
                  scaledSize: new google.maps.Size(25, 25), // scaled size
                  //origin: new google.maps.Point(0,0), // origin
                  //anchor: new google.maps.Point(0, 0) // anchor
              };
        motoMrk = new google.maps.Marker({
        position: new google.maps.LatLng(data[0].latitude, data[0].longitude),
        icon: moto,
        map: map
      });

        motoMrk.setPosition( new google.maps.LatLng( coo[0], coo[1] ) );
          map.panTo( new google.maps.LatLng( coo[0], coo[1] ) );*/
        

      //}
    //}
  });
}

$(document).on("click",".coin",function(){
  enviaPropina($(this).attr("id"));
  console.log(enviaPropina)
});


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIgHRdKzKEajo2T9uICvkdIHToQxgDfHg&callback=myMap"></script>